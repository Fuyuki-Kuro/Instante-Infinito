import os
import random
from telebot import TeleBot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton, WebAppInfo
from dotenv import load_dotenv
from auth.auth import gerar_token

load_dotenv()

TOKEN = os.getenv('TELEGRAM_BOT_TOKEN')
bot = TeleBot(TOKEN)

# Lista de mensagens rom√¢nticas
romantic_messages = [
    "O universo se alinha para que nossos caminhos se cruzem... E aqui estamos, compartilhando um momento juntos.",
    "Quando o cora√ß√£o fala, as palavras s√£o poucas. E o meu cora√ß√£o est√° falando: voc√™ √© especial.",
    "Entre o c√©u e a terra, encontrei voc√™. E agora, o mundo parece mais bonito.",
    "Se eu pudesse te dar uma coisa na vida, eu te daria a habilidade de se ver atrav√©s dos meus olhos. S√≥ ent√£o voc√™ perceberia o quanto √© especial.",
    "Nosso encontro n√£o √© mera coincid√™ncia. O destino sabe o que faz.",
    "N√£o √© um adeus, √© s√≥ um at√© logo. At√© nos encontrarmos novamente, no espa√ßo e no tempo.",
    "O sil√™ncio entre n√≥s tamb√©m √© poesia. Cada palavra n√£o dita, um abra√ßo invis√≠vel.",
    "A felicidade √© uma escolha, e eu escolho estar ao seu lado.",
    "√Äs vezes, as palavras n√£o s√£o necess√°rias. Apenas estar perto de voc√™ j√° √© tudo o que preciso.",
    "O amor √© uma linguagem silenciosa. Quando nossos olhares se cruzam, entendemos tudo."
]

# Mensagens de boas-vindas rom√¢nticas
welcome_messages = [
    "O primeiro passo para nossa hist√≥ria acaba de ser dado. Voc√™ est√° pronto para embarcar nessa jornada de encantos comigo?",
    "Aqui estamos, o destino nos uniu e agora, cada palavra trocada se torna poesia no nosso encontro.",
    "Ao seu lado, o tempo parece fluir de maneira suave e doce. Bem-vindo ao meu pequeno mundo encantado.",
    "Entre as estrelas, nossos caminhos se cruzaram. Agora, nossos cora√ß√µes batem no mesmo ritmo. Bem-vindo!"
]

# Comando /start com bot√£o do WebApp
@bot.message_handler(commands=['start'])
def send_welcome(message):
    keyboard = InlineKeyboardMarkup()
    
    # Enviar o ID do usu√°rio como parte da URL do WebApp
    token = gerar_token(message.from_user.id)
    webapp_url = f"https://ve-scores-vacuum-mall.trycloudflare.com?token={token}"  # Incluindo o user_id na URL
    
    # Bot√£o que abre o WebApp "Instante Infinito"
    webapp_button = InlineKeyboardButton(
        text="üåê Abrir Instante Infinito",
        web_app=WebAppInfo(url=webapp_url)  # Passando a URL com o user_id
    )
    
    # Bot√£o que abre o WebApp "Nosso Di√°rio"
    diario_button = InlineKeyboardButton(
        text="üìñ Nosso Di√°rio",
        web_app=WebAppInfo(url=f"https://ve-scores-vacuum-mall.trycloudflare.com/diario?token={token}")  # Passando a URL com o user_id
    )
    
    # Adiciona os dois bot√µes no teclado
    keyboard.add(webapp_button)
    keyboard.add(diario_button)

    # Enviar uma mensagem de boas-vindas rom√¢ntica
    welcome_message = random.choice(welcome_messages)
    bot.send_message(
        message.chat.id,
        f"{welcome_message}\n\nEscolha uma das op√ß√µes abaixo para abrir o WebApp desejado, e continuarmos nossa hist√≥ria.",
        reply_markup=keyboard
    )

# Comando /romance para enviar uma mensagem rom√¢ntica espec√≠fica
@bot.message_handler(commands=['romance'])
def send_romantic_message(message):
    # Envia uma mensagem rom√¢ntica aleat√≥ria
    romantic_message = random.choice(romantic_messages)
    bot.send_message(message.chat.id, f"üíå {romantic_message}")

# Comando /explicacao para uma descri√ß√£o rom√¢ntica sobre o bot
@bot.message_handler(commands=['explicacao'])
def send_explanation(message):
    # Mensagem rom√¢ntica explicando o funcionamento do bot
    explanation_message = (
        "Ah, voc√™ quer saber um pouco mais sobre essa nossa troca de palavras? Cada mensagem que trocamos √© como um verso de poesia, "
        "onde cada palavra tem o poder de encantar e envolver. Esse bot foi feito para compartilhar momentos com voc√™, como um conto rom√¢ntico, "
        "onde os bot√µes s√£o apenas pequenos pontos de partida para o que chamamos de destino... Agora, d√™ o pr√≥ximo passo e abra o WebApp, "
        "onde nossos cora√ß√µes podem conversar de outra maneira."
    )
    bot.send_message(message.chat.id, explanation_message)

# Comando /despedida para uma mensagem rom√¢ntica de despedida
@bot.message_handler(commands=['despedida'])
def send_farewell(message):
    # Mensagem rom√¢ntica de despedida
    farewell_message = (
        "Por enquanto, √© s√≥ um at√© logo... O amor nunca diz adeus, apenas guarda na mem√≥ria os momentos especiais que compartilhamos. "
        "Enquanto nos afastamos, saiba que voc√™ estar√° sempre em meus pensamentos. At√© breve, querido(a)."
    )
    bot.send_message(message.chat.id, farewell_message)

# Captura dados retornados do WebApp (caso voc√™ envie algo de volta)
@bot.message_handler(content_types=["web_app_data"])
def receive_webapp_data(message):
    data = message.web_app_data
    bot.send_message(message.chat.id, f"Voc√™ enviou: {data.data}")

if __name__ == "__main__":
    bot.infinity_polling()
